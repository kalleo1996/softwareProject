// JavaScript source code
// JavaScript source code
// JavaScript source code
import React, { Component } from 'react';
import {
    StyleSheet,
    Text,
    View,
    TextInput,
    TouchableOpacity,
    ScrollView,
    AppRegistry,
	ImageBackground,
	Alert,
	ActivityIndicator
} from 'react-native';

import Logo from '../components/Logo';
import Form from '../components/Form';

 class Login extends Component<{}> {
 constructor(props) {
    super(props);
    
    this.state = {
      username: '',
      password: '',
	  isLoading: true
    };
  }

  onLogin() {

    const { username, password } = this.state;
    var data ={"username":username,
    "password": password }
  
   fetch('http://192.168.8.104:8080/api/auth/signin', {
    method: 'POST',
    headers: {
      Accept: 'application/json',
      'Content-Type': 'application/json',
    },
    body: JSON.stringify(data),
  }).then((response)=>response.json())
  .then((responseJson)=> {

        this.setState({
          isLoading: false,
          dataSource: JSON.stringify(responseJson),
        }, function(){

        });

      })



  .catch((error)=>{console.error(error); });
      
	   if(this.state.isLoading){
	   

	   //console.warn('Login is oky')
	    this.props.navigation.navigate('Menu')

	   }
	   else{
	   
	    // console.warn('warn')
		 Alert.alert('Error','username and password missMatch',[{
	 text:'okay'
	 }])

	   }
   
 
  }

/*CheckLogin()
 {
 const {username, password  } = this.state
 if( username == 'admin' &&  password == 'admin' )
 {
   //console.warn('Login is oky')
   this.props.navigation.navigate('Menu')
   
 }
 
 else {
 	
	 Alert.alert('Error','Username/Password mismatch',[{
	 text:'okay'
	 }])
 }
 

 }*/






    render() {
        return (

          <ImageBackground source={{ uri: 'https://w-dog.net/wallpapers/13/14/297187961978249/paris-eiffel-tower-bokeh.jpg' }} style={{ width: '100%', height: '100%' }}>
            <View style={styles.container}>

                <Logo />
                <TextInput style={styles.inputBox}
                    underlineColorAndroid='rgba(0,0,0,0)'
                    placeholder="UserName"
                    placeholderTextColor="#494949"
					//onChangeText={text => this.setState({username: text})} 
					          value={this.state.username}
                   onChangeText={(username) => this.setState({ username })}
                    keyboardType="email-address"

                />
                <TextInput style={styles.inputBox}
                    underlineColorAndroid='rgba(0,0,0,0)'
                    placeholder="Password"
                    secureTextEntry={true}
					//onChangeText={text => this.setState({password: text})}
					          value={this.state.password}
                      onChangeText={(password) => this.setState({ password })}
                    placeholderTextColor="#494949"

                />
                <TouchableOpacity style={styles.button}>
                    <Text
                        //onPress={() => this.CheckLogin()}
						onPress={this.onLogin.bind(this)}
                        style={styles.buttonText}>Login</Text>
                </TouchableOpacity>

                <Text style={styles.signupText}>Don't have an account yet?</Text>
                <TouchableOpacity><Text style={styles.signupButton}
                    onPress={() => this.props.navigation.navigate('Sign_Up')}
                >Signup</Text></TouchableOpacity>
                </View>

				</ImageBackground>
           
        )
    }
}

export default Login;

const styles = StyleSheet.create({
    container: {
        flex: 1,
        justifyContent: 'center',
        alignItems: 'center',
          //backgroundColor: '#212121'
    },

    signupTextCont: {
        flexGrow: 1,
        alignItems: 'flex-end',
        justifyContent: 'center',
        paddingVertical: 16,

    },
    signupText: {
        color: 'rgba(255,255,255,0.6)',
        fontSize: 16
    },
    signupButton: {
        color: '#ffffff',
        fontSize: 16,
        fontWeight: '500'
    },

    inputBox: {
        width: 300,
        backgroundColor: 'rgb(255, 255,255)',
        borderRadius: 25,
        paddingHorizontal: 16,
        fontSize: 16,
        color: '#494949',
        marginVertical: 10
    },
    button: {
        width: 300,
        backgroundColor: '#000000',
        borderRadius: 25,
        marginVertical: 10,
        paddingVertical: 13
    },
    buttonText: {
        fontSize: 16,
        fontWeight: '500',
        color: '#ffffff',
        textAlign: 'center'
    }




});

AppRegistry.registerComponent(
    'AwesomeProject',
    () => Login);